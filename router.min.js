(function(){const util={genKey:()=>{let t='xxxxxxxx';return t.replace(/[xy]/g,function(c){let r=Math.random()*16|0;let v=c==='x'?r:(r&0x3|0x8);return v.toString(16);})},getParamsUrl:(url)=>{let hashDeatail=(url||location.hash).split("?"),hashName=hashDeatail[0].split("#")[1],params=hashDeatail[1]?hashDeatail[1].split("&"):[],query={};for(let i=0;i<params.length;i++){let item=params[i].split("=");query[item[0]]=item[1];}
return{hash:hashName,query:query,params:params}},serialize:(obj,name)=>{let result="";function serializeInternal(o,path){for(p in o){let value=o[p];if(typeof value!="object"){if(typeof value=="string"){result+="\n"+path+"["+(isNaN(p)?"\""+p+"\"":p)+"] = "+"\""+value.replace(/\"/g,"\\\"")+"\""+";";}else{result+="\n"+path+"["+(isNaN(p)?"\""+p+"\"":p)+"] = "+value+";";}}else{if(value instanceof Array){result+="\n"+path+"["+(isNaN(p)?"\""+p+"\"":p)+"]"+"="+"new Array();";serializeInternal(value,path+"["+(isNaN(p)?"\""+p+"\"":p)+"]");}else{result+="\n"+path+"["+(isNaN(p)?"\""+p+"\"":p)+"]"+"="+"new Object();";serializeInternal(value,path+"["+(isNaN(p)?"\""+p+"\"":p)+"]");}}}}
serializeInternal(obj,name);return result;}}
const render={loadHtml:function(targetId,fileUrl){this.ajax({url:fileUrl}).then(resp=>{this.render(targetId,resp,fileUrl);})},ajax:function(config){let configMap={method:config.method||"GET",url:config.url,async:config.async||true,contentType:config.contentType||"application/x-www-form-urlencoded;charset=utf-8",headers:config.headers||{},data:config.data||{}}
return new Promise(function(resolve,reject){let XHR;if(window.XMLHttpRequest){XHR=new XMLHttpRequest();}else{XHR=new ActiveXObject("Microsoft.XMLHTTP");}
XHR.open(configMap.method,configMap.url,configMap.async);Object.keys(configMap.headers).forEach(key=>XHR.setRequestHeader(key,configMap.headers[key]));XHR.setRequestHeader("Content-Type",configMap.contentType);XHR.onreadystatechange=function(){if(XHR.readyState===4){if((XHR.status>=200&&XHR.status<300)||XHR.status==304){try{resolve(XHR.responseText);}catch(e){reject(e);}}else{reject(new Error("Request was unsuccessful: "+XHR.statusText));}}}
XHR.send(configMap.data);});},createElement:function(vnode){var tag=vnode.tag;var attrs=vnode.attrs||{};var children=vnode.children||[];if(!tag){return null;}
var elem=document.createElement(tag);var attrName;for(attrName in attrs){if(attrs.hasOwnProperty(attrName)){elem.setAttribute(attrName,attrs[attrName]);}}
children.forEach(function(childVnode){elem.appendChild(createElement(childVnode));})
return elem;},findScript:function(str){const reg=/<script.*?src="(.*?)".*?<\/script>/ig
let result;let resultList=[];while(result=reg.exec(str)){resultList.push(result[1]);}
return resultList;},removeScript:function(str){const reg=/<script.*?src="(.*?)".*?<\/script>/ig;let result=str.replace(reg,"");return result;},findLink:function(str){const reg=/<link.*?href="(.*?)".*?>/ig;let result;let resultList=[];while(result=reg.exec(str)){resultList.push(result[1]);}
return resultList;},removeLink:function(str){const reg=/<link.*?href="(.*?)".*?>/ig;let result=str.replace(reg,"");return result;},toAbsPath:function(fileUrl){const reg=/(.*\/).*?[.].*?/;let result=reg.exec(fileUrl);return result[1];},render:function(targetId,htmlStr,absPath){let target=document.querySelector(targetId);let doc=new DocumentFragment();absPath=absPath?this.toAbsPath(absPath):"";this.findLink(htmlStr).forEach(cssUrl=>{cssUrl=cssUrl.indexOf("/")===0?cssUrl:absPath+cssUrl;let node=this.createElement({tag:'link',attrs:{rel:"stylesheet",href:cssUrl}});doc.appendChild(node);});htmlStr=this.removeLink(htmlStr);this.findScript(htmlStr).forEach(srcUrl=>{srcUrl=srcUrl.indexOf("/")===0?srcUrl:absPath+srcUrl;let node=this.createElement({tag:'script',attrs:{src:srcUrl}})
doc.appendChild(node);});htmlStr=this.removeScript(htmlStr);let node=this.createElement({tag:'div'});node.innerHTML=htmlStr;doc.appendChild(node);target.innerHTML="";target.appendChild(doc);},renderDom:function(targetId,doc){let target=document.querySelector(targetId);target.innerHTML="";target.appendChild(doc);}}
function Router(){this.routes={};this.beforeFun=null;this.afterFun=null;this.routerViewId="#routerView";this.redirectRoute="/";this.stackPages=true;this.routerMap=[];this.historyFlag='';this.history=[];this.cache={};}
Router.prototype={init:function(config){let self=this;this.routerMap=config?config.routes||this.routerMap:this.routerMap;this.routerViewId=config?config.routerViewId||this.routerViewId:this.routerViewId;this.stackPages=config?config.stackPages||this.stackPages:this.stackPages;this.redirectRoute=config?config.redirectRoute||this.redirectRoute:this.redirectRoute;this.map();window.goforward=function(path){if(path.indexOf("?")!==-1){window.location.hash=path+'&key='+util.genKey();}else{window.location.hash=path+'?key='+util.genKey();}}
window.goback=function(params,index){let backHash=self.backHash(index);if(params){this.Object.keys(params).forEach(key=>{backHash.params.push(key+"="+params[key]);})}
window.location.hash=backHash.params.length?backHash.hash+="?"+backHash.params.join("&"):backHash.hash;}
window.gorefresh=function(){this.window.location.reload();}
window.addEventListener('load',function(event){self.historyChange(event);},false)
window.addEventListener('hashchange',function(event){self.historyChange(event);},false)},backHash:function(index){index=index||-1;let nameStr="router-"+this.routerViewId+"-history";this.history=window.sessionStorage[nameStr]?JSON.parse(window.sessionStorage[nameStr]):[];if(this.history.length&&this.history.length-1>=-index){return backHash=this.history[this.history.length-1+index];}},map:function(){this.routerMap.forEach(route=>{this.routes[route.name]=route;});},historyChange:function(event){let currentHash=util.getParamsUrl();let nameStr="router-"+this.routerViewId+"-history";this.history=window.sessionStorage[nameStr]?JSON.parse(window.sessionStorage[nameStr]):[];let back=false,refresh=false,forward=false,index=0,len=this.history.length;this.history.forEach((his,idx)=>{if(his.hash===currentHash.hash&&his.key===currentHash.query.key){index=idx;if(idx===len-1){refresh=true;}else{back=true;}}else{forward=true;}})
if(back){this.historyFlag='back';this.history.length=index+1;}else if(refresh){this.historyFlag='refresh';}else{this.historyFlag='forward';const item={hash:currentHash.hash,key:currentHash.query.key,params:currentHash.params,}
this.history.push(item);this.cacheView(util.getParamsUrl(event.oldURL));}
console.log('historyFlag :',this.historyFlag);if(!this.stackPages){this.historyFlag='forward';}
window.sessionStorage[nameStr]=JSON.stringify(this.history);this.urlChange();},urlChange:function(){let currentHash=util.getParamsUrl();if(this.routes[currentHash.hash]){let self=this;if(this.beforeFun){this.beforeFun({to:{path:currentHash.hash,query:currentHash.query},next:function(){self.changeView(currentHash);}})}else{this.changeView(currentHash);}}else{location.hash=this.redirectRoute;}},changeView:function(currentHash){if(this.cache[currentHash.hash+currentHash.query.key]){render.renderDom(this.routerViewId,this.cache[currentHash.hash+currentHash.query.key]);delete this.cache[currentHash.hash+currentHash.query.key];}else{render.loadHtml(this.routerViewId,this.routes[currentHash.hash].path);}
this.afterFun?this.afterFun(currentHash):null;},cacheView:function(currentHash){if(this.routes[currentHash.hash]&&this.routes[currentHash.hash].cacheable){let doc=new DocumentFragment();let target=document.querySelector(this.routerViewId);let children;while((children=target.childNodes).length!=0){doc.appendChild(children[0]);}
this.cache[currentHash.hash+currentHash.query.key]=doc;}},beforeEach:function(callback){if(Object.prototype.toString.call(callback)==='[object Function]'){this.beforeFun=callback;}else{console.trace('路由切换前钩子函数不正确')}},afterEach:function(callback){if(Object.prototype.toString.call(callback)==='[object Function]'){this.afterFun=callback;}else{console.trace('路由切换后回调函数不正确')}}}
window.Router=Router;window.router=new Router();})()